{"version":3,"sources":["components/Pagination/index.module.css","App.module.css","components/Modal/Modal.module.css","app/actions.js","components/Characters/index.jsx","components/Character/index.js","components/Modal/Modal.jsx","components/Modal/ModalComponent.jsx","components/Pagination/index.jsx","App.js","app/reducer.js","app/store.js","serviceWorker.js","index.js","components/Characters/index.module.css","components/Character/index.module.css"],"names":["module","exports","fetchCharacters","dispatch","getState","a","charactersData","type","Axios","get","filterByName","pagination","page","response","payload","data","error","Index","useDispatch","useSelector","state","useEffect","className","styles","filterContainer","inputName","placeholder","onChange","e","name","target","value","Pagination","cardContainer","loading","characters","map","character","Character","id","renderCards","onClick","content","src","image","alt","species","gender","location","status","getCharacterData","card","imgCard","descriptionContainer","Modal","isOpenModal","setShowModal","children","escFunction","event","keyCode","document","addEventListener","removeEventListener","createPortal","body","ModalComponent","style","overflow","classNames","modalContainer","showModal","defaultProps","paginationMainContainer","button","disabled","prev","next","App","Characters","modal","generalContainerModal","modalContent","initialState","charactersReducer","action","results","info","store","configureStore","reducer","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,wBAA0B,4CAA4C,OAAS,2BAA2B,QAAU,8B,mBCAtID,EAAOC,QAAU,CAAC,IAAM,iBAAiB,WAAW,sBAAsB,iBAAiB,4BAA4B,aAAa,wBAAwB,WAAW,sBAAsB,sBAAwB,mCAAmC,eAAiB,8B,mBCAzQD,EAAOC,QAAU,CAAC,eAAiB,8BAA8B,sBAAwB,qCAAqC,QAAU,yB,yJCS3HC,EAAkB,yDAAM,WAAOC,EAAUC,GAAjB,qBAAAC,EAAA,+DACRD,IAAnBE,EAD2B,EAC3BA,eACRH,EAAS,CAAEI,KAXuB,yBASC,kBAIVC,IAAMC,IALlB,qDAK4B,iBAA0B,OAAdH,QAAc,IAAdA,OAAA,EAAAA,EAAgBI,eAAgB,GAA5C,2BAA8E,OAAdJ,QAAc,IAAdA,GAAA,UAAAA,EAAgBK,kBAAhB,eAA4BC,OAAQ,KAJ1G,OAI3BC,EAJ2B,OAKjCV,EAAS,CAAEI,KAboB,sBAaOO,QAASD,EAASE,OALvB,gDAOjCZ,EAAS,CAAEI,KAdoB,sBAcOS,MAAK,OAPV,yDAAN,yD,uBCuChBC,EA5CM,WACnB,IAAMd,EAAWe,cAETZ,EADMa,aAAY,SAACC,GAAD,OAAWA,KAC7Bd,eAmBR,OAlBAe,qBAAU,WACRlB,EAASD,OAER,IAeI,qCACL,sBAAKoB,UAAWC,IAAOC,gBAAvB,UACE,uBACEF,UAAWC,IAAOE,UAClBC,YAAY,iCACZnB,KAAK,OAAOoB,SAAU,SAAAC,GDZP,IAACC,ECad1B,GDbc0B,ECaGD,EAAEE,OAAOC,MDbH,SAAC5B,GAChCA,EAAS,CAAEI,KAjBW,WAiBKO,QAASe,IACpC1B,EAASD,WCaL,cAAC8B,EAAD,OAGF,qBACEV,UAAWC,IAAOU,cADpB,SAxBF,WAAwB,IAAD,EACrB,OAAI3B,EAAe4B,QACV,qBAAKZ,UAAU,SAAf,wBAET,OAAOhB,QAAP,IAAOA,GAAP,UAAOA,EAAgB6B,kBAAvB,aAAO,EAA4BC,KAAI,SAAAC,GACrC,OACE,cAACC,EAAD,CAEED,UAAWA,GAFb,UACUA,EAAUR,KADpB,YAC4BQ,EAAUE,QAmBvCC,S,gBCcQvB,EAjDD,SAAC,GAAmB,IAAjBoB,EAAgB,EAAhBA,UACTlC,EAAWe,cAWjB,OACE,sBACEuB,QAAS,WFmBgB,IAACC,EElBxBvC,GFkBwBuC,EE/BL,WAAO,IAAD,EAC7B,OAAQ,gCACN,qBAAKC,IAAG,OAAEN,QAAF,IAAEA,OAAF,EAAEA,EAAWO,MAAOC,IAAI,KAChC,8CAAUR,QAAV,IAAUA,OAAV,EAAUA,EAAWR,QACrB,gDAAYQ,QAAZ,IAAYA,OAAZ,EAAYA,EAAWS,WACvB,gDAAYT,QAAZ,IAAYA,OAAZ,EAAYA,EAAWU,UACvB,kDAAcV,QAAd,IAAcA,GAAd,UAAcA,EAAWW,gBAAzB,aAAc,EAAqBnB,QACnC,wCAAWQ,EAAUY,aAQfC,GFgBgC,SAAC/C,GAC3CA,EAAS,CAAEI,KA/BoB,oBA+BKO,QAAS4B,QEdzCpB,UAAWC,IAAO4B,KAPpB,UAQE,8BACE,qBACE7B,UAAWC,IAAO6B,QAClBT,IAAKN,EAAUO,MACfC,IAAKR,EAAUR,SAGnB,sBAAKP,UAAWC,IAAO8B,qBAAvB,UACE,4BAAIhB,EAAUR,OACd,+BAAOQ,EAAUS,iB,iBCDVQ,EA/BD,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,YAAaC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,SAAUnC,EAAgB,EAAhBA,UAC9CoC,EAAc,SAAAC,GACI,KAAlBA,EAAMC,SACRJ,GAAa,IAYjB,OATAnC,qBAAU,WAKR,OAJIkC,GACFM,SAASC,iBAAiB,UAAWJ,GAAa,GAG7C,WACLG,SAASE,oBAAoB,UAAWL,GAAa,OAIvDM,uBACE,qBACEvB,QAAS,SAAAb,GAEa,mBAAhBA,EAAEE,OAAOS,IAA2BiB,GAAa,IAEvDlC,UAAWA,EACXiB,GAAG,iBANL,SAQGkB,IAEHI,SAASI,O,iBCxBTC,EAAiB,SAAC,GAAwD,IAAtDT,EAAqD,EAArDA,SAAUF,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,aAAclC,EAAgB,EAAhBA,UAK7D,OAHAD,qBAAU,WACRwC,SAASI,KAAKE,MAAMC,SAAWb,EAAc,SAAW,SACvD,CAACA,IAEF,mCAEIA,GACE,cAAC,EAAD,CACEA,YAAaA,EACbC,aAAc,SAAA5B,GAAO4B,EAAa5B,IAClCN,UAAW+C,IAAW9C,IAAO+C,eAAgBhD,GAC7CiD,UAAWhB,EAJb,SAMGE,OAabS,EAAeM,aAAe,CAC5BlD,UAAW,IAEE4C,Q,iBCRAjD,EAzBD,WAAO,IAAD,MACZd,EAAWe,cAETZ,EADMa,aAAY,SAACC,GAAD,OAAWA,KAC7Bd,eACR,OAAqB,OAAdA,QAAc,IAAdA,OAAA,EAAAA,EAAgBK,aACrB,sBAAKW,UAAWC,IAAOkD,wBAAvB,UACE,wBACEnD,UAAWC,IAAOmD,OAClBjC,QAAS,WACPtC,GLgBoB,SAACA,EAAUC,GAAc,IAAD,EAC5CE,EAAmBF,IAAnBE,eACRH,EAAS,CAAEI,KAzBY,YAyBKO,SAAuB,OAAdR,QAAc,IAAdA,GAAA,UAAAA,EAAgBK,kBAAhB,eAA4BC,MAAO,IACxET,EAASD,SKjBHyE,WAAU,OAACrE,QAAD,IAACA,GAAD,UAACA,EAAgBK,kBAAjB,aAAC,EAA4BiE,MALzC,kBADF,OAQGtE,QARH,IAQGA,GARH,UAQGA,EAAgBK,kBARnB,aAQG,EAA4BC,KAC7B,wBACEU,UAAWC,IAAOmD,OAClBjC,QAAS,WACPtC,GLGoB,SAACA,EAAUC,GAAc,IAAD,EAC5CE,EAAmBF,IAAnBE,eACRH,EAAS,CAAEI,KArBY,YAqBKO,SAAuB,OAAdR,QAAc,IAAdA,GAAA,UAAAA,EAAgBK,kBAAhB,eAA4BC,MAAO,IACxET,EAASD,SKJHyE,WAAU,OAACrE,QAAD,IAACA,GAAD,UAACA,EAAgBK,kBAAjB,aAAC,EAA4BkE,MALzC,sB,iBCeSC,EA5BH,WACV,IAAM3E,EAAWe,cACXE,EAAQD,aAAY,SAACC,GAAD,OAAWA,KAErC,OACE,sBAAKE,UAAWC,IAAOuD,IAAvB,UAEE,cAACC,EAAD,IACC3D,EAAMd,eAAe0E,MAAMzB,aAAe,cAAC,EAAD,CACzCjC,UAAWC,IAAO0D,sBAClB1B,YAAanC,EAAMd,eAAe0E,MAAMzB,YACxCC,aAAc,WACZrD,GNiB0B,SAACA,EAAUC,GAAc,IAAD,EAClDE,EAAmBF,IAAnBE,eACRH,EAAS,CAAEI,KA7BoB,oBA6BKO,UAAS,OAACR,QAAD,IAACA,GAAD,UAACA,EAAgB0E,aAAjB,aAAC,EAAuBzB,mBMvBtB,SAOzC,sBAAKjC,UAAWC,IAAO+C,eAAvB,UACE,wBAAQ7B,QAAS,WAAQtC,GNaC,SAACA,EAAUC,GAAc,IAAD,EAClDE,EAAmBF,IAAnBE,eACRH,EAAS,CAAEI,KA7BoB,oBA6BKO,UAAS,OAACR,QAAD,IAACA,GAAD,UAACA,EAAgB0E,aAAjB,aAAC,EAAuBzB,mBMf7D,eACA,+BACGnC,EAAMd,eAAe0E,MAAME,wB,eCvBlCC,EAAe,CACnBhD,WAAY,GACZD,SAAS,EACTlB,MAAO,KACPN,aAAc,GACdC,WAAY,CACVC,KAAM,GAGRoE,MAAO,CACLzB,aAAa,EACb2B,aAAc,KAoDHE,EAjDW,WAAmC,IAAlChE,EAAiC,uDAAzB+D,EAAcE,EAAW,uCAC1D,OAAQA,EAAO9E,MACb,IAAK,uBACH,OAAO,2BACFa,GADL,IAEEc,SAAS,EACTlB,MAAO,OAEX,IAAK,sBACH,OAAO,2BACFI,GADL,IAEEe,WAAYkD,EAAOvE,QAAQwE,QAC3B3E,WAAW,aAAGC,KAAMQ,EAAMT,WAAWC,MAASyE,EAAOvE,QAAQyE,MAC7DrD,SAAS,IAEb,IAAK,sBACH,OAAO,2BACFd,GADL,IAEEc,SAAS,EACTlB,MAAOqE,EAAOrE,QAElB,IAAK,WACH,OAAO,2BACFI,GADL,IAEET,WAAW,2BAAMS,EAAMT,YAAb,IAAyBC,KAAM,IACzCF,aAAa,GAAD,OAAK2E,EAAOvE,WAE5B,IAAK,YACL,IAAK,YACH,OAAO,2BACFM,GADL,IAEET,WAAW,2BAAMS,EAAMT,YAAb,IAAyBC,KAAMyE,EAAOvE,YAEpD,IAAK,oBACH,OAAO,2BACFM,GADL,IAEE4D,MAAM,2BAAM5D,EAAM4D,OAAb,IAAoBzB,YAAa8B,EAAOvE,YAEjD,IAAK,oBACH,OAAO,2BACFM,GADL,IAEE4D,MAAO,CAAEE,aAAcG,EAAOvE,QAASyC,aAAa,KAGxD,QACE,OAAOnC,ICpDEoE,EALDC,YAAe,CAC3BC,QAAS,CACPpF,eAAgB8E,KCQAO,QACW,cAA7BC,OAAO5C,SAAS6C,UAEe,UAA7BD,OAAO5C,SAAS6C,UAEhBD,OAAO5C,SAAS6C,SAASC,MACvB,2DCVNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUT,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJ3B,SAASqC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAACC,GAClCA,EAAaC,iB,kBEpInBxG,EAAOC,QAAU,CAAC,cAAgB,kCAAkC,UAAY,8BAA8B,gBAAkB,sC,kBCAhID,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,qBAAuB,2C","file":"static/js/main.e24067a6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationMainContainer\":\"Pagination_paginationMainContainer__3bLRH\",\"button\":\"Pagination_button__2tSfD\",\"animate\":\"Pagination_animate__2rWyj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"App-logo\":\"App_App-logo__25k4o\",\"App-logo-float\":\"App_App-logo-float__6zTQU\",\"App-header\":\"App_App-header__xLkWl\",\"App-link\":\"App_App-link__3FsH9\",\"generalContainerModal\":\"App_generalContainerModal__3_2W7\",\"modalContainer\":\"App_modalContainer__3QGBJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"Modal_modalContainer__2ER2N\",\"generalContainerModal\":\"Modal_generalContainerModal__nBN7H\",\"content\":\"Modal_content__1VIbZ\"};","import Axios from \"axios\"\nexport const FETCH_POSTS_REQUESTS = 'FETCH_POSTS_REQUESTS'\nexport const FETCH_POSTS_SUCCESS = 'FETCH_POSTS_SUCCESS'\nexport const FETCH_POSTS_FAILURE = 'FETCH_POSTS_FAILURE'\nexport const SET_NAME = 'SET_NAME'\nexport const NEXT_PAGE = 'NEXT_PAGE'\nexport const PREV_PAGE = 'PREV_PAGE'\nexport const SET_IS_OPEN_MODAL = 'SET_IS_OPEN_MODAL'\nexport const SET_MODAL_CONTENT = 'SET_MODAL_CONTENT'\nconst apiURL = \"https://rickandmortyapi.com/api/character?count=20\"\nexport const fetchCharacters = () => async (dispatch, getState) => {\n  const { charactersData } = getState()\n  dispatch({ type: FETCH_POSTS_REQUESTS })\n  try {\n    const response = await Axios.get(apiURL + `&name=${charactersData?.filterByName || \"\"}&count=20&page=${charactersData?.pagination?.page || \"\"}`);\n    dispatch({ type: FETCH_POSTS_SUCCESS, payload: response.data })\n  } catch (error) {\n    dispatch({ type: FETCH_POSTS_FAILURE, error })\n  }\n}\nexport const setName = (name) => (dispatch) => {\n  dispatch({ type: SET_NAME, payload: name })\n  dispatch(fetchCharacters())\n}\nexport const nextPage = () => (dispatch, getState) => {\n  const { charactersData } = getState()\n  dispatch({ type: NEXT_PAGE, payload: charactersData?.pagination?.page + 1 })\n  dispatch(fetchCharacters())\n}\nexport const prevPage = () => (dispatch, getState) => {\n  const { charactersData } = getState()\n  dispatch({ type: PREV_PAGE, payload: charactersData?.pagination?.page - 1 })\n  dispatch(fetchCharacters())\n}\nexport const setIsOpenModal = () => (dispatch, getState) => {\n  const { charactersData } = getState()\n  dispatch({ type: SET_IS_OPEN_MODAL, payload: !charactersData?.modal?.isOpenModal })\n}\nexport const setModalContent = (content) => (dispatch) => {\n  dispatch({ type: SET_MODAL_CONTENT, payload: content })\n}\n","import React, { useEffect } from 'react'\nimport { Character, Pagination } from '..';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCharacters, setName } from './../../app/actions';\nimport styles from './index.module.css'\nexport const Index = () => {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state)\n  const { charactersData } = state\n  useEffect(() => {\n    dispatch(fetchCharacters())\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function renderCards() {\n    if (charactersData.loading) {\n      return <div className=\"loader\">Loading...</div>\n    }\n    return charactersData?.characters?.map(character => {\n      return (\n        <Character\n          key={`${character.name}-${character.id}`}\n          character={character} />\n      )\n    })\n\n  }\n  return <>\n    <div className={styles.filterContainer}>\n      <input\n        className={styles.inputName}\n        placeholder=\"Escribe un nombre para filtrar\"\n        type=\"text\" onChange={e => {\n          dispatch(setName(e.target.value))\n        }} />\n      <Pagination />\n    </div>\n\n    <div\n      className={styles.cardContainer}>\n      {renderCards()}\n\n    </div>\n\n  </>\n\n\n};\n\nexport default Index\n","import React from 'react'\nimport styles from './index.module.css'\nimport { shape, string } from 'prop-types'\nimport { useDispatch } from 'react-redux';\nimport { setModalContent } from './../../app/actions';\nconst Index = ({ character }) => {\n  const dispatch = useDispatch();\n  const getCharacterData = () => {\n    return (<div >\n      <img src={character?.image} alt=\"\" />\n      <p>Name: {character?.name}</p>\n      <p>Specie: {character?.species}</p>\n      <p>Gender: {character?.gender}</p>\n      <p>Location: {character?.location?.name}</p>\n      <p>Status:{character.status}</p>\n    </div>)\n  }\n  return (\n    <div\n      onClick={() => {\n        dispatch(\n          setModalContent(\n            getCharacterData()\n          ))\n      }}\n      className={styles.card}>\n      <div>\n        <img\n          className={styles.imgCard}\n          src={character.image}\n          alt={character.name}\n        />\n      </div>\n      <div className={styles.descriptionContainer}>\n        <p>{character.name}</p>\n        <span>{character.species}</span>\n      </div>\n\n    </div>\n  )\n}\nIndex.propTypes = {\n  character: shape(\n    {\n      image: string,\n      name: string,\n      species: string,\n      gender: string,\n      location: shape({\n        name: string\n      })\n    }\n  )\n}\nexport default Index\n","import React, { useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nconst Modal = ({ isOpenModal, setShowModal, children, className }) => {\n  const escFunction = event => {\n    if (event.keyCode === 27) {\n      setShowModal(false);\n    }\n  };\n  useEffect(() => {\n    if (isOpenModal) {\n      document.addEventListener(\"keydown\", escFunction, false);\n    }\n\n    return () => {\n      document.removeEventListener(\"keydown\", escFunction, false);\n    };\n  });\n  return (\n    createPortal(\n      <div\n        onClick={e => {\n\n          if (e.target.id === \"modalContainer\") { setShowModal(false); }\n        }}\n        className={className}\n        id=\"modalContainer\"\n      >\n        {children}\n      </div>,\n      document.body,\n    )\n  );\n};\nexport default Modal;\n","import React, { useEffect } from \"react\";\nimport classNames from \"classnames\";\nimport { node, bool, func, string } from \"prop-types\";\nimport Modal from \"./Modal\";\nimport styles from \"./Modal.module.css\";\n\nconst ModalComponent = ({ children, isOpenModal, setShowModal, className }) => {\n\n  useEffect(() => {\n    document.body.style.overflow = isOpenModal ? \"hidden\" : \"auto\"\n  }, [isOpenModal]);\n  return (\n    <>\n      {\n        isOpenModal && (\n          <Modal\n            isOpenModal={isOpenModal}\n            setShowModal={e => { setShowModal(e); }}\n            className={classNames(styles.modalContainer, className)}\n            showModal={isOpenModal}\n          >\n            {children}\n          </Modal>\n        )\n      }\n    </>\n  )\n};\nModalComponent.propTypes = {\n  children: node.isRequired,\n  isOpenModal: bool.isRequired,\n  setShowModal: func.isRequired,\n  className: string,\n};\nModalComponent.defaultProps = {\n  className: \"\",\n};\nexport default ModalComponent;\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nextPage, prevPage } from './../../app/actions';\nimport styles from './index.module.css'\nconst Index = () => {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state)\n  const { charactersData } = state\n  return charactersData?.pagination && (\n    <div className={styles.paginationMainContainer}>\n      <button\n        className={styles.button}\n        onClick={() => {\n          dispatch(prevPage())\n        }}\n        disabled={!charactersData?.pagination?.prev}\n      >Prev</button>\n      {charactersData?.pagination?.page}\n      <button\n        className={styles.button}\n        onClick={() => {\n          dispatch(nextPage())\n        }}\n        disabled={!charactersData?.pagination?.next}\n      >Next</button>\n    </div>\n  )\n}\n\nexport default Index\n","import React from \"react\";\nimport { Characters, ModalComponent } from './components'\nimport { useDispatch, useSelector } from 'react-redux';\nimport styles from './App.module.css'\nimport { setIsOpenModal } from './app/actions';\nconst App = () => {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state)\n\n  return (\n    <div className={styles.App}>\n\n      <Characters />\n      {state.charactersData.modal.isOpenModal && <ModalComponent\n        className={styles.generalContainerModal}\n        isOpenModal={state.charactersData.modal.isOpenModal}\n        setShowModal={() => {\n          dispatch(setIsOpenModal());\n        }}\n      >\n        <div className={styles.modalContainer}>\n          <button onClick={() => { dispatch(setIsOpenModal()); }}>X</button>\n          <main>\n            {state.charactersData.modal.modalContent}\n          </main>\n        </div>\n\n\n      </ModalComponent>}\n    </div>\n  );\n};\n\nexport default App;\n","const initialState = {\n  characters: [],\n  loading: false,\n  error: null,\n  filterByName: \"\",\n  pagination: {\n    page: 1\n  },\n\n  modal: {\n    isOpenModal: false,\n    modalContent: \"\"\n  }\n}\nconst charactersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"FETCH_POSTS_REQUESTS\":\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      }\n    case \"FETCH_POSTS_SUCCESS\":\n      return {\n        ...state,\n        characters: action.payload.results,\n        pagination: { page: state.pagination.page, ...action.payload.info },\n        loading: false,\n      }\n    case \"FETCH_POSTS_FAILURE\":\n      return {\n        ...state,\n        loading: false,\n        error: action.error\n      }\n    case \"SET_NAME\":\n      return {\n        ...state,\n        pagination: { ...state.pagination, page: 1 },\n        filterByName: `${action.payload}`\n      }\n    case \"NEXT_PAGE\":\n    case \"PREV_PAGE\":\n      return {\n        ...state,\n        pagination: { ...state.pagination, page: action.payload },\n      }\n    case \"SET_IS_OPEN_MODAL\":\n      return {\n        ...state,\n        modal: { ...state.modal, isOpenModal: action.payload, }\n      }\n    case \"SET_MODAL_CONTENT\":\n      return {\n        ...state,\n        modal: { modalContent: action.payload, isOpenModal: true, }\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default charactersReducer","import { configureStore } from '@reduxjs/toolkit';\nimport charactersReducer from './reducer';\nconst store = configureStore({\n  reducer: {\n    charactersData: charactersReducer\n  },\n});\nexport default store","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardContainer\":\"Characters_cardContainer__1c09Y\",\"inputName\":\"Characters_inputName__22tmj\",\"filterContainer\":\"Characters_filterContainer__1jdYg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Character_card__v6DAO\",\"imgCard\":\"Character_imgCard__3pU4i\",\"descriptionContainer\":\"Character_descriptionContainer__2JumN\"};"],"sourceRoot":""}